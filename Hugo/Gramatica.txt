Programa-><funct>

secuencia-sent-><secuencia-sent>;<sentencia>

secuencia-sent-><sentencia>

sentencia-><sent-if>

sentencia-><sent-repeat>

sentencia-><sent-assign>

sentencia-><sent-declara>

sentencia-><sent-switch>

sentencia-><sent-for>

sentencia-><sent-while>

sentencia-><sent-window>

sentencia-><sent-button>

sentencia-><sent-textBox>

sent-if->if(<exp>)<secuencia-sent>endif

sent-if->if(<exp>)<secuencia-sent>else<secuencia-sent>endif

sent-repeat->repeat{<secuencia-sent>}until(<exp>)

sent-assign->id:=<exp>

sent-declara->Var{<Tipo><identificadores>}

identificadores-><identificadores>,id|id

Tipo->int|float|string|char|Window|Button|textBox|funcion

exp-><exp-simple><op-comparacion><exp-simple>

exp-><exp-simple>

op-comparacion->==

op-comparacion->\>

op-comparacion->\<

exp-simple-><exp-simple><opsuma><term>

exp-simple-><term>

opsuma->+

opsuma->-

term-><term><opmult><potencia>

term-><potencia>

potencia-><potencia>^<factor>

potencia-><factor>

opmult->*

opmult->/

factor->(<exp>)

factor-><num>

factor-><variable>

variable->id

num->n

sent-switch->switch(<variable>) <sent-sw> endswitch

sent-sw->case<sent-const>:<secuencia-sent>break;|case<sent-const>:<secuencia-sent>

sent-const-><num>|<cadena>

sent-for->for(sent-assign;<exp>;step<num>{<secuencia-sent>}endfor

sent-while->while(<exp>){<secuencia-sent>}endwhile

sent-funcion->def id{ <sentencia-sent> }endDef

sent-window->initWindow(<variable>,<tam-h>,<tam-w>)

tam-w-><num>

sent-window->closeWindow()

sent-button->createButton(<variable>,<variable>,<num>,<num>)

sent-textBox->createTextBox(<variable>,<variable>,<num>,<num>,<num><num>)
sent-Event->clickButon(<variable>)
assingFunct-><variable>:=<variable>();
funct->void<variable>()<secuencia-sent>endfunct